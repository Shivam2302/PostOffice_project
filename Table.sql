CREATE SCHEMA postal_service;
SET SEARCH_PATH TO postal_service;

CREATE TABLE manager
(
  MGR_ID INT PRIMARY KEY,
  FNAME VARCHAR(20) NOT NULL,
  LNAME VARCHAR(20) NOT NULL,
  GENDER VARCHAR(10)  check (gender = 'female' or gender='male'),
  DATE_OF_JOIN DATE NOT NULL,
  INCOME BIGINT NOT NULL,
  DATE_OF_BIRTH DATE NOT NULL,
  LOCALITY VARCHAR(20),
  CITY VARCHAR(15) NOT NULL ,  
  STATE VARCHAR(15) NOT NULL   
);


CREATE TABLE m_contact
(
  MGR_ID INT,
  CONTACT_NO BIGINT check (contact_no>999999999 and contact_no<10000000000),
  PRIMARY KEY(mgr_id,contact_no),
  FOREIGN KEY (MGR_ID) REFERENCES manager(mgr_id) 
  ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE post_office
(
  PIN INT PRIMARY KEY,
  PNAME VARCHAR(15) NOT NULL,
  LOCALITY VARCHAR(20),
  CITY VARCHAR(20) NOT NULL,
  STATE VARCHAR(20) NOT NULL
);


CREATE TABLE p_contact
(
  PIN INT, 
  CONTACT_NO BIGINT check (contact_no>999999999 and contact_no<10000000000),
  PRIMARY KEY(pin,contact_no),
  FOREIGN KEY (PIN) REFERENCES post_office(pin) 
  ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE managed_by
(
    MGR_ID INT,
    PIN INT ,
    FROM_DATE DATE NOT NULL,
    TO_DATE DATE,
    PRIMARY KEY (mgr_id,pin),
    FOREIGN KEY (MGR_ID)  REFERENCES manager(mgr_id)
    ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (PIN) REFERENCES post_office(pin)
    ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE investor
(
 CID INT PRIMARY KEY,
 FNAME VARCHAR(20) NOT NULL,
 LNAME VARCHAR(20) NOT NULL,
 AGE SMALLINT NOT NULL,
 GENDER VARCHAR(10)  check (gender = 'female' or gender='male'),
 OCCUPATION VARCHAR(20),
 LOCALITY VARCHAR(20),
 CITY VARCHAR(20) NOT NULL,
 STATE VARCHAR(20)  NOT NULL
 );


CREATE TABLE c_contact
(
  CID INT ,
  CONTACT_NO BIGINT check (contact_no>999999999 and contact_no<10000000000) ,
  PRIMARY KEY(cid,contact_no),
  FOREIGN KEY (CID) REFERENCES INVESTOR(cid) 
  ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE w_cost
(
  FROM_WEIGHT INT,
  TO_WEIGHT INT,
  TYPE VARCHAR(20) check (type = 'registered post' or type = 'speed post' or type = 'ordinary post'),
  W_CST INT  NOT NULL,
  PRIMARY KEY(FROM_WEIGHT,TO_WEIGHT,TYPE)
);


CREATE TABLE d_cost
(
  FROM_DISTANCE INT,
  TO_DISTANCE INT,
  TYPE VARCHAR(20) check (type = 'registered post' or type = 'speed post' or type = 'ordinary post'),
  D_CST INT NOT NULL,
  PRIMARY KEY(FROM_DISTANCE,TO_DISTANCE,TYPE)
);

CREATE TABLE scheme
(
  SCHEME_ID INT PRIMARY KEY,
  NAME TEXT NOT NULL,
  INTEREST_RATE REAL  NOT NULL,
  MIN_AGE_REQUIRED VARCHAR(20),
  TENURE INT  NOT NULL,
  MIN_DEP INT NOT NULL,
  TYPE_OF_PLAN VARCHAR(10)  check (type_of_plan = 'monthly' or type_of_plan = 'yearly' or type_of_plan = 'one time' )
);

CREATE TABLE account
(
  PIN INT NOT NULL ,
  CID INT NOT NULL ,
  SCHEME_ID INT NOT NULL ,
  ACCOUNT_NO INT NOT NULL,
  DATE_OF_TRANS DATE NOT NULL,
  TRANSACTION BIGINT NOT NULL, 
  START_DATE DATE NOT NULL,
  PRIMARY KEY(account_no,date_of_trans),
  FOREIGN KEY (PIN) REFERENCES post_office(pin) 
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(CID) REFERENCES investor(cid) 
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY (SCHEME_ID) REFERENCES scheme(scheme_id) 
  ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE sender
(
 SID INT PRIMARY KEY,
 FNAME VARCHAR(20) NOT NULL,
 LNAME VARCHAR(20) NOT NULL,
 LOCALITY VARCHAR(20),
 CITY VARCHAR(20) NOT NULL,
 STATE VARCHAR(20)  NOT NULL
 );

CREATE TABLE item
(
  ITEM_ID INT PRIMARY KEY,
  WEIGHT REAL NOT NULL,
  DISTANCE INT NOT NULL,
  SOURCE VARCHAR(20) NOT NULL,
  TYPE VARCHAR(20) check (type = 'registered post' or type = 'speed post' or type = 'ordinary post'),
  DESTINATION VARCHAR(20) NOT NULL,
  PIN INT NOT NULL ,
  SID INT NOT NULL,
  FROM_WEIGHT INT NOT NULL, 
  TO_WEIGHT INT,
  FROM_DISTANCE INT NOT NULL, 
  TO_DISTANCE INT  ,
  R_DATE DATE NOT NULL,
  D_DATE DATE, 
  cost real,
  FOREIGN KEY (FROM_WEIGHT,TO_WEIGHT,TYPE) REFERENCES w_cost(from_weight,to_weight,type),
  FOREIGN KEY (FROM_DISTANCE,TO_DISTANCE,TYPE) REFERENCES d_cost(from_distance,to_distance,type),
  FOREIGN KEY (PIN)  REFERENCES post_office(pin) 
  ON DELETE SET NULL ON UPDATE CASCADE,
  FOREIGN KEY(SID)  REFERENCES sender(sid) 
  ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE s_contact
(
  SID INT ,
  CONTACT_NO BIGINT  NOT NULL check (contact_no>999999999 and contact_no<10000000000) ,
  PRIMARY KEY(sid,contact_no),
  FOREIGN KEY (SID) REFERENCES sender(sid) 
                                                                   ON DELETE SET NULL ON UPDATE CASCADE
);
